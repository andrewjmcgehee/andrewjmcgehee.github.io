{"version":3,"sources":["components/Blog/Blog.js","components/assets/profile.png","components/ContactCard/ContactCard.js","components/Home/Home.js","components/Nav/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Blog","style","marginTop","fontFamily","ContactCard","className","src","profile","href","color","Home","Nav","callback","size","useState","height","undefined","width","windowSize","setWindowSize","useEffect","handleResize","window","innerHeight","innerWidth","addEventListener","removeEventListener","useWindowSize","onClick","target","App","page","setPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAQeA,EARF,WACX,OACE,qBAAKC,MAAO,CAACC,UAAW,IAAKC,WAAY,UAAzC,SACE,uD,OCHS,G,MAAA,IAA0B,qCC8B1BC,EAxBK,WAClB,OACE,sBAAKC,UAAU,eAAf,UACE,8BACE,qBAAKA,UAAU,UAAUC,IAAKC,MAEhC,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAYA,UAAU,YACtB,mBAAGG,KAAK,yCAAR,+BAEF,sBAAKH,UAAU,SAAf,UACE,cAAC,IAAD,CAAUA,UAAU,UAAUI,MAAM,UACpC,mBAAGD,KAAK,uCAAR,+BAEF,sBAAKH,UAAU,QAAf,UACE,cAAC,IAAD,CAAaA,UAAU,YACvB,mBAAGG,KAAK,uCAAR,uCCcKE,G,MAjCF,WACX,OACE,sBAAKL,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,QAAf,UACE,0CACA,gsBAUA,i4B,MCuBOM,MAtCH,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACPC,EAkBR,WAA0B,IAAD,EACaC,mBAAS,CAC3CC,YAAQC,EACRC,WAAOD,IAHc,mBAChBE,EADgB,KACJC,EADI,KAgBvB,OAXAC,qBAAU,WACR,SAASC,IACPF,EAAc,CACZJ,OAAQO,OAAOC,YACfN,MAAOK,OAAOE,aAKlB,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,EAlCMS,GAEb,OACE,qBAAKtB,UAAU,gBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,+BACE,mBAAGA,UAAU,QAAQuB,QAAS,kBAAMhB,EAAS,SAA7C,SACIC,EAAKI,MAAQ,IAAO,oBAAsB,UAGhD,mBAAGW,QAAS,kBAAMhB,OAASI,IAA3B,kBACA,mBAAGY,QAAS,kBAAMhB,EAAS,SAA3B,kBACA,mBAAGJ,KAAK,SAASqB,OAAO,SAAxB,sBCQOC,G,MAnBH,WAAO,IAAD,EACQhB,wBAASE,GADjB,mBACTe,EADS,KACHC,EADG,KAShB,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CAAKO,SAAUoB,IACf,qBAAK3B,UAAU,YAAf,SARG0B,EACQ,SAATA,EAAwB,cAAC,EAAD,IACf,SAATA,EAAwB,cAAC,EAAD,SAA5B,EAFkB,cAAC,EAAD,WCCPE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.efa04ae7.chunk.js","sourcesContent":["const Blog = () => {\n  return (\n    <div style={{marginTop: 140, fontFamily: 'Oswald'}}>\n      <h1>Under Construction</h1>\n    </div>\n  );\n};\n\nexport default Blog;","export default __webpack_public_path__ + \"static/media/profile.881c50fb.png\";","import {FaGithub, FaInstagram, FaLinkedin} from 'react-icons/fa';\n\nimport './ContactCard.css';\n\nimport profile from '../assets/profile.png';\n\nconst ContactCard = () => {\n  return (\n    <div className=\"contact-card\">\n      <div>\n        <img className='profile' src={profile} />\n      </div>\n      <div className=\"card-details\">\n        <div className=\"linkedin\">\n          <FaLinkedin className=\"fa-icon\" />\n          <a href=\"https://linkedin.com/in/andrewjmcgehee\">andrewjmcgehee</a>\n        </div>\n        <div className=\"github\">\n          <FaGithub className=\"fa-icon\" color=\"white\" />\n          <a href=\"https://instagram.com/andrewjmcgehee\">andrewjmcgehee</a>\n        </div>\n        <div className=\"insta\">\n          <FaInstagram className=\"fa-icon\" />\n          <a href=\"https://instagram.com/andrewjmcgehee\">@andrewjmcgehee</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactCard;\n","import ContactCard from '../ContactCard/ContactCard';\n\nimport './Home.css';\n\nconst Home = () => {\n  return (\n    <div className='home-container'>\n      <ContactCard />\n      <div className=\"about\">\n        <h1>About Me</h1>\n        <p>\n          My name is Andrew, and I'm a software engineer at Google. I love learning about artificial\n          intelligence and neuroscience. Apart from programming, AI, and brains, I love \n          playing guitar and singing, practicing Brazilian jiu jitsu and yoga, and gourmet cooking.\n          I love to travel and learn foreign languages, and I'm constantly devouring a plethora of \n          random sources of information about things like space travel, the environment, fitness, \n          and high achievers throughout history. I'm also slowly forcing myself to love reading \n          physical books (rather than reddit or other online articles). A more typical (and \n          professional) overview of my research and career interests follows.\n        </p>\n        <p>\n          My research interests lie broadly in the fields of artificial intelligence, deep learning, \n          and neuroscience. I am particularly interested in deep reinforcement learning, the role of \n          the default mode network in the human brain, the role of nociceptors and pain receptors in \n          sample efficient learning, and sophisticated motor control and coordination. It is my firm \n          belief that the most promising way forward in artificial intelligence research is through \n          a deep understanding of the human brain and nervous system as both a densely intricate \n          array of sensors and a highly organized filtration system for those sensory inputs. \n          Similarly, I believe the most promising way forward in neuroscience research is through \n          the development of innovative yet biologically plausible models of mental faculties (e.g., \n          decision making, planning, learning, motor control).\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport './Nav.css';\n\nconst Nav = ({ callback }) => {\n  const size = useWindowSize();\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"navbar\">\n        <span>\n          <a className=\"brand\" onClick={() => callback('home')}>\n            {(size.width > 512) ? \"Andrew J. McGehee\" : \"AJM\"}\n          </a>\n        </span>\n        <a onClick={() => callback(undefined)}>Home</a>\n        <a onClick={() => callback('blog')}>Blog</a>\n        <a href=\"cv.pdf\" target=\"_blank\">CV</a>\n      </div>\n    </div>\n  );\n};\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    height: undefined,\n    width: undefined,\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    }\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowSize;\n}\n\nexport default Nav;\n","import { useState } from 'react';\n\nimport Blog from './components/Blog/Blog';\nimport Home from './components/Home/Home';\nimport Nav from './components/Nav/Nav';\nimport './App.css';\n\nconst App = () => {\n  const [page, setPage] = useState(undefined);\n\n  function switchPage() {\n    if (!page) return <Home />;\n    if (page === 'home') return <Home />;\n    if (page === 'blog') return <Blog />;\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav callback={setPage} />\n      <div className=\"container\">\n        {switchPage()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}